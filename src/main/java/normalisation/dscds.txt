    for (Text text_element : text_elements) {
            int old_index = 0;
            while (true) {
                String text = text_element.toString();
                //TODO fix regex for nested <<>>
                Pattern pattern = Pattern.compile("[A-z]+\\s*<.*>");
                Matcher matcher = pattern.matcher(text);
                if (matcher.find()) {
                    int start = matcher.start();
                    if (start <= old_index) {
                        old_index++;
                        continue;
                    }
                    old_index = start;
                    String match = text.substring(start, matcher.end());
                    char[] a = match.toCharArray();
                    int end_index = 0;
                    for (int i = 0; i < a.length; i++) {
                        char c = a[i];
                        System.out.println(c + " " + i);
                        if (c == '<') {
                            end_index = i + start;
                            break;
                        }

                    }
                    match = text.substring(start, end_index);
                    String prefix = text.substring(0, start);
                    String remainder = text.substring(end_index);
                    for (String s : map.keySet()) {
                        if (map.get(s).contains(match)) {
                            match = s;
                            StringBuilder sb = new StringBuilder(prefix);
                            sb.append(match);
                            sb.append(remainder);
                            text_element.setText(sb.toString());
                            break;
                        }
                    }
                    break;

                } else {
                    break;
                }

            }
        }